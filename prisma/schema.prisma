generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Permission {
  id    Int              @id @default(autoincrement())
  name  String
  roles PermissionRole[]
}

model PermissionRole {
  id           Int        @id @default(autoincrement())
  roleId       Int
  permissionId Int
  state        Boolean
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String
  permissions PermissionRole[]
  users       User[]
}

model User {
  id                    Int           @id @default(autoincrement())
  name                  String
  secondName            String
  firstLastName         String
  secondLastName        String
  identity              String        @unique
  dateOfBirth           DateTime
  gender                String
  phone                 String        @unique
  address               String
  age                   Int
  email                 String        @unique
  password              String
  token                 String?
  token_type            String?
  role                  Role?         @relation(fields: [roleId], references: [id])
  roleId                Int?
  state                 Boolean       @default(true)
  failed_login_attempts Int           @default(0)
  course                Course?       @relation(fields: [courseId], references: [id])
  courseId              Int?
  is_tutor              Boolean       @default(false)
  tutorCourses          String?       @db.Text
  courseTeacher         String?       @db.Text
}

model Course {
  id       Int             @id @default(autoincrement())
  name     String?
  state    Boolean?        @default(true)
  course   User[]
}



model Subject {
  id      Int             @id @default(autoincrement())
  name    String
  state   Boolean         @default(true)
}


